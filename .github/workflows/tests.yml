# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# Excellent reference: https://github.com/hynek/structlog/blob/main/.github/workflows/ci.yml

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # python-version: ["3.9", "3.10", "3.11"]
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install tox tox-gh-actions
    # - name: Test with tox
    #   run: tox
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type-check with mypy
      # if: ${{ python-version != 3.9 }}
      # if: ${{ matrix.python-version == '3.10' || matrix.python-version == '3.11' }}
      run: |
        mypy src
    
    # Running tests with coverage means coverage reports will be stored to .coverage
    - name: Test with pytest
      run: |
        # pytest
        coverage run -m pytest
        # coverage report
        coverage run -m pytest src/datopy --doctest-modules
        # coverage report
        # coverage html
        # Generate detailed coverage report
        coverage report -m
        # Generate XML report for the following steps
        coverage xml


    # - name: Install 
    #   run: npm install
    # - name: Test and Coverage
    #   run: npm run test:cov  # or npm run coverage

    - name: Update Coverage Badge
      # GitHub actions: default branch variable
      # https://stackoverflow.com/questions/64781462/github-actions-default-branch-variable
      if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
      uses: we-cli/coverage-badge-action@main
      with:
        path: coverage.xml


  # TODO discard failed attempts at uploading coverage

  #   # Publish coverage report
  #   # Upload the generated report above to "coverage-data"
  #   # TODO verify that this action applies to the final round of testing run 
  #   # (i.e., --doctest-modules on py311)
  #   # https://python-basics-tutorial.readthedocs.io/en/latest/test/coverage.html#test-coverage-of-all-tests-with-github-actions
  #   - name: "Upload coverage data"
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: "coverage-data"
  #       path: .coverage.*
  #       if-no-files-found: ignore

  # # Summarize coverage results
  # # Requires that all tests under the job 'tests' are performed.
  # # Once the workflow is complete, the HTML report can be found under: 
  # # Actions ‣ tests ‣ Combine and check coverage.
  # coverage:
  #     name: "Combine and check coverage"
  #     needs: tests
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: "Check out the repo"
  #         uses: "actions/checkout@v3"
  
  #       - name: "Set up Python"
  #         uses: "actions/setup-python@v4"
  #         with:
  #           python-version: "3.11"
  
  #       - name: "Install dependencies"
  #         run: |
  #           python -m pip install --upgrade coverage[toml]

  #       # Downloads the coverage data uploaded above in 
  #       # the step "Upload coverage data" to the location "coverage-data".
  #       - name: "Download coverage data"
  #         uses: actions/download-artifact@v3
  #         with:
  #           name: "coverage-data"

  #       # Checks coverage and exits if it falls below a given threshold. 
  #       - name: "Combine coverage and fail it it’s under 50%"
  #         run: |
  #           python -m coverage combine
  #           python -m coverage html --skip-covered --skip-empty
  
  #           # Report and write to summary
  #           python -m coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY
  
  #           # Report again and fail if under 100%
  #           python -Im coverage report --fail-under=50
  
  #       - name: "Upload HTML report if check failed"
  #         uses: actions/upload-artifact@v3
  #         with:
  #           name: html-report
  #           path: htmlcov
  #         if: ${{ failure() }}

  #       # Create a badge for coverage % that can be displayed in a readme file.
  #       - name: "Create badge"
  #         uses: schneegans/dynamic-badges-action@v1.6.0
  #         with:
  #           auth: ${{ secrets.GIST_TOKEN }}
  #           gistID: 3b6365582ce4701db1c3fa36c004d65d
  #           filename: covbadge.json
  #           label: Coverage
  #           message: ${{ env.total }}%
  #           minColorRange: 50
  #           maxColorRange: 90
  #           valColorRange: ${{ env.total }}


    # TODO discard failed attempts at uploading coverage
    # - name: Publish coverage report to GitHub Pages
    #   # if: ${{ github.ref == 'refs/heads/master' }}
    #   uses: JamesIves/github-pages-deploy-action@v4
    #   with:
    #     folder: htmlcov

    # Coverage report badge: https://github.com/marketplace/actions/coverage-badge
    # - name: Update Coverage Badge
    #   # GitHub actions: default branch variable
    #   # https://stackoverflow.com/questions/64781462/github-actions-default-branch-variable
    #   if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    #   uses: we-cli/coverage-badge-action@main
